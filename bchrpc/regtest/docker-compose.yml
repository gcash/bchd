version: "3.3"
services:
  bchd1: # a bchd full node for gs++ to connect to
    image: "bchd_regtest"
    build:
      dockerfile: "./bchrpc/regtest/Dockerfile.bchd"
      context: "../.."
    depends_on: 
      - bchd2  # uses the test.sh script to delete the prev key/pair, otherwise we need to manually delete 
    volumes: 
      - ./:/data       # stores self-generated rpc.bchd1.key & rpc.bchd1.cert here so we can use it with gRPC client
    entrypoint: [ "/data/bchd-entrypoint.sh", "bchd1" ]
    expose:
      - "18444"        # bitcoin regtest network
    ports:
      - "18335:18335"  # gRPC bchrpc service
      - "18336:18334"  # RPC service
  bchd2: # a second bchd full node using json-rpc to generate blocks, connect nodes, and double spend
    image: "bchd_regtest"
    build:
      dockerfile: "./bchrpc/regtest/Dockerfile.bchd"
      context: "../.."
    volumes: 
      - ./:/data       # stores bchd.sh here
    entrypoint: [ "/data/bchd-entrypoint.sh", "bchd2" ]
    expose:
      - "18444"        # bitcoin regtest network
    ports:
      - "18334:18334"  # RPC service
  nodejs: # a node.js image for running the actual unit tests (via `docker-compose exec nodejs ./_test.sh` in ./test.sh)
    image: "nodejs_regtest"
    build:
      dockerfile: "./bchrpc/regtest/Dockerfile.nodejs"
      context: "../.."
    volumes:
      - ./:/data
    depends_on:
      - "bchd1"
      - "bchd2"
    command: tail -F anything
  bchd3: # a third bchd container for the purpose of manual observation separate from automated tests (see tools directory)
    image: "bchd_regtest"
    build:
      dockerfile: "./bchrpc/regtest/Dockerfile.bchd"
      context: "../.."
    volumes: 
      - ./:/data  # stores bchd.sh here
    entrypoint: ["tail", "-F", "anything"]  # this allows us to start and stop a node via docker-compose exec
    depends_on:
      - "bchd1"
      - "bchd2"
    expose:
      - "18444"        # bitcoin regtest network
    ports:
      - "18337:18334"  # RPC service
